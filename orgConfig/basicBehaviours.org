* Basic Behaviours

1. Disable:
   1. Backup files
   2. Autosave and beckup files
   3. Blinking cursor
   4. Ringing Bell
   5. Using Tabs
   6. Windows keys
2. Enable:
   1. y/n for yes and no
   2. Save cursor position
   3. Electric parentesis
   4. Auto-revert-mode
   5. Visual Line mode
   6. UTF-8
   7. Allow narrow-to-region to be used without confirmation
   8. Recursive minibuffer change
   9. Recent-f mode
   10. Warn when opening files bigger than 100MB
   11. Better Scrolling
   12. Winner Mode: restore windows, especially for ediff sessions
   13. Save on frame focus out: https://emacsredux.com/blog/2014/03/22/a-peek-at-emacs-24-dot-4-focus-hooks/
3. Set:
   1. Recent-f save list every 5 minutes
   2. Emacs window fullscreen at startup
   3. Keybindings for scrolling up and down to <M-up> and <M-down> (not natural scrolling)
   4. Keybindings for comment-or-uncomment-region
   5. Alwayst load newest byte code first
   6. Reduce the frequency of garbage collection by making it happen on each 50MB of allocated data (the default is on every 0.76MB)
   7. Smart Tab Behaviour
   8. Path executable on windows (git, 7z, curl...)
   9. Winner-undo after ediff quits, hook
   10. Set ediff options:
       1. Remove separate frame
       2. Split vertical
       3. Ignore whitespaces
   11. Keybinding for eval-region
4. Enhance:
   1. The load-theme function in order to unload any previous loaded themes
   2. Show the matching paren into the minibuffer, if it is off screen
#+BEGIN_SRC emacs-lisp
(setq make-backup-files nil)					;1-1
(setq auto-save-default nil)					;1-2
(blink-cursor-mode -1)						;1-3
(setq ring-bell-function 'ignore) 				;1-4
(setq-default indent-tabs-mode nil)				;1-5
                                                                ;1-6
(when (eq system-type 'windows-nt)
  (setq w32-pass-lwindow-to-system nil)
  (setq w32-lwindow-modifier 'super) ; Left Windows key

  (setq w32-pass-rwindow-to-system nil)
  (setq w32-rwindow-modifier 'super) ; Right Windows key

  (setq w32-pass-apps-to-system nil)
  (setq w32-apps-modifier 'hyper)) ; Menu/App key


(defalias 'yes-or-no-p 'y-or-n-p)				;2-1
(savehist-mode 1)						;2-2
(electric-pair-mode 1)						;2-3
(global-auto-revert-mode 1)					;2-4
(global-visual-line-mode 1)					;2-5
								;2-6
(set-language-environment "UTF-8")
(prefer-coding-system 'utf-8)
(set-default-coding-systems 'utf-8)
(set-terminal-coding-system 'utf-8)
(set-keyboard-coding-system 'utf-8)

(put 'narrow-to-region 'disabled nil)				;2-7
(setq enable-recursive-minibuffers t)				;2-8
(recentf-mode 1)						;2-9
(setq large-file-warning-threshold 100000000)                   ;2-10
								;2-11
(setq scroll-margin 0
      scroll-conservatively 100000
      scroll-preserve-screen-position 1)
(winner-mode)                                                   ;2-12
(add-hook 'focus-out-hook (lambda () (save-some-buffers t)))    ;2-13

(add-to-list 'default-frame-alist '(fullscreen . maximized))	;3-1
(run-at-time nil (* 5 60) 'recentf-save-list)			;3-2
								;3-3
(global-set-key (kbd "C-c /") 'comment-or-uncomment-region)
                                                                ;3-4
(global-set-key (kbd "M-<up>") 'scroll-down-command) ; Alt+up
(global-set-key (kbd "M-<down>") 'scroll-up-command) ; Alt+down

(setq load-prefer-newer t)                                      ;3-5
(setq gc-cons-threshold 50000000)                               ;3-6
(setq tab-always-indent 'complete)				;3-7
(when (eq system-type 'windows-nt)                              ;3-8
  (add-to-list 'exec-path "C:/Program Files/Git/bin")
  (add-to-list 'exec-path "C:/Program Files/Git/mingw64/bin")
  (setenv "PATH" (concat "C:/Program Files/Git/bin;" "C:/Program Files/Git/mingw64/bin;" (getenv "PATH")))
  ;; needed for arc-mode
  (add-to-list 'exec-path "C:/Program Files/7-Zip"))
                                                                ;3-9
(defun exit-ediff-hook ()
  (kill-buffer "*Ediff Registry*")
  (winner-undo)
)
(add-hook 'ediff-after-quit-hook-internal 'exit-ediff-hook)
                                                                ;3-10
(setq ediff-window-setup-function 'ediff-setup-windows-plain)
(setq ediff-split-window-function 'split-window-horizontally)
(setq ediff-diff-options "-w")

(global-set-key (kbd "C-c c l e") 'eval-region)

(defadvice load-theme (before disable-themes-first activate)
  (disable-all-themes))                                         ;4-1

                                                                ;4-2

(defadvice show-paren-function (after my-echo-paren-matching-line activate)
  "If a matching paren is off-screen, echo the matching line."
  (when (char-equal (char-syntax (char-before (point))) ?\))
    (let ((matching-text (blink-matching-open)))
      (when matching-text
        (message matching-text)))))
#+END_SRC
