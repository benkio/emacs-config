* Alignment & Indentation

Functions for alignment of text and indentation of buffer

#+BEGIN_SRC emacs-lisp :tangle yes
(defun align-to-colon (begin end)
  "Align region to colon (:) signs"
  (interactive "r")
  (align-regexp begin end
                (rx (group (zero-or-more (syntax whitespace))) ":") 1 1 ))

(defun align-to-comma (begin end)
  "Align region to comma  signs"
  (interactive "r")
  (align-regexp begin end
                (rx "," (group (zero-or-more (syntax whitespace))) ) 1 1 ))


(defun align-to-equals (begin end)
  "Align region to equal signs"
  (interactive "r")
  (align-regexp begin end
                (rx (group (zero-or-more (syntax whitespace))) " =") 1 1 ))

(defun align-to-hash (begin end)
  "Align region to hash (                                        => ) signs"
  (interactive "r")
  (align-regexp begin end
                (rx (group (zero-or-more (syntax whitespace))) " =>") 1 1 ))

;; work with this
(defun align-to-comma-before (begin end)
  "Align region to equal signs"
  (interactive "r")
  (align-regexp begin end
                (rx (group (zero-or-more (syntax whitespace))) ",") 1 1 ))

(defun indent-buffer-or-region ()
  "indent whole buffer"
  (interactive)
  (delete-trailing-whitespace)
  (setq regionStart (point-min)
        regionEnd   (point-max))
  (when (use-region-p)
    (setq regionStart (region-beginning)
          regionEnd   (region-end)))
  (save-excursion (indent-region regionStart regionEnd nil))
  (untabify regionStart regionEnd))

(global-set-key (kbd "C-c f") 'indent-buffer-or-region)
#+END_SRC
