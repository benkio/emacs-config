* FFMPEG

Here you can find the functions to instruct ffmpeg. Very useful when
you have to cut a specific video, extract audio, convert to a specific
format.

Feel free to come and add your function if not present
#+begin_src emacs-lisp :tangle yes

(defun cut-media-file (origin startTime endTime newName)
  "This function get in input:
- The path to a specific video
- The start time of the cut (00:00:00)
- The end time of the cut (00:00:00)
- The new name of the output
Perform a ffmpeg command to cut the input and generate the new output in the same directory
"
  (interactive "FFile name to cut from:
sStart Time (00:00:00):
sEnd Time (00:00:00):
sNew Name: ")

  (setq totalSeconds (+
                      (-
                       (string-to-number (substring endTime 6))
                       (string-to-number (substring startTime 6)))
                      (*
                       (-
                        (string-to-number (substring endTime 3 5))
                        (string-to-number (substring startTime 3 5)))
                       60
                       )
                      (*
                       (-
                        (string-to-number (substring endTime 0 2))
                        (string-to-number (substring startTime 0 2)))
                       3600
                       )
                      )
        )

  (setq ffmpegCommand (concat "ffmpeg -ss " startTime " -i \"" origin "\" -t " (number-to-string totalSeconds) " -vcodec copy -acodec copy \"" (concat (file-name-directory origin) newName) "\""))

  (async-shell-command ffmpegCommand)
  )

(defun concatenate-media-files ()
  "Concatenate a list of files with the same encoding"
  (interactive)
  ;; ask the user for a list of files
  ;; at each step ask if it's the last one
  ;; finally as for the new name of the output
  (setq files (list (read-file-name "The initial file name: ")))
  (message "%s" files)
  (while (yes-or-no-p "Another file? ")
    (progn
      (setq files (append files (list (read-file-name "Next file name: "))))
      )
    )
  (setq newFile (read-string "Insert the new file name: "))
  (message "%s" files)
  (message "%s" newFile)
  ;; ffmpeg -f concat -safe 0 -i mylist.txt -c copy output.wav
  )

#+end_src
