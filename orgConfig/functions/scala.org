* Scala

  Functions used specifically for dealing with scala code

#+BEGIN_SRC emacs-lisp :tangle yes

  (defun scala-goto-next-warn-error ()
    "Search into an sbt output for the first warning/error, starting from cursor position, and move to it"
    (interactive)
    ;; Parse and Navigate to file
    (search-forward ".scala")
    (beginning-of-line)
    (search-forward "] ")
    (setq filenamePathPos (point))
    (search-forward ":")
    (left-char)
    (setq filePath (buffer-substring filenamePathPos (point)))
    (other-window 1)
    (find-file filePath)
    (other-window -1)

    ;; Parse and navigate to line
    (right-char)
    (setq filenamePathPos (point))
    (search-forward ":")
    (left-char)
    (setq fileLine (buffer-substring filenamePathPos (point)))
    (other-window 1)
    (goto-line (string-to-number fileLine))
    (other-window -1)

    ;; Parse and navigate to column
    (right-char)
    (setq filenamePathPos (point))
    (search-forward ":")
    (left-char)
    (setq fileColumn (buffer-substring filenamePathPos (point)))
    (other-window 1)
    (right-char (string-to-number fileColumn))
  )

;; (defun scala-import-type-not-found ()
;;   "Search into an sbt output for the first missing import, search the for the type, copy the right import and add it to the failing file"
;;   (interactive)
;;   (search-forward "not found: type ")
;;   (setq missingTypeStartingPoint (point))
;;   (setq startingBuffer (buffer-name))

;;   (end-of-line)

;;   (setq missingType (buffer-substring missingTypeStartingPoint (point)))
;;   (sbt-find-definitions missingType)
;;   (set-process-sentinel (get-process "grep") 'scala-import-type-not-found-sbt-callback)
;;   )

;; (defun scala-import-type-not-found-sbt-callback (process event)
;;   "A callback attached to grep after the call to sbt-find-definitions"
;;   (message "callback called")

;;   ;; Wait for 1 sec before working to the buffers to give the time to
;;   ;; sbt-find-definitions to move to the selected buffer
;;   (sleep-for 2)
;;   (setq newBuffer (current-buffer))
;;   (message (concat "wakeup!!!: " (buffer-name newBuffer)))
;;   (beginning-of-buffer)
;;   ;; (search-forward "package ")
;;   ;; (setq missingTypePackageStartingPoint (point))
;;   ;; (end-of-line)
;;   ;; (setq missingTypePackage (concat (buffer-substring missingTypePackageStartingPoint (point)) "." missingType))

;;   ;; (message (concat "inport to hit" missingTypePackage))

;;   ;; (kill-buffer)
;;   ;; (kill-buffer "*grep*")

;;   ;; (switch-to-buffer startingBuffer)
;;   ;; (beginning-of-line)
;;   ;; (search-forward "] ")
;;   ;; (setq filenamePathPos (point))
;;   ;; (search-forward ":")
;;   ;; (left-char)
;;   ;; (setq filePath (buffer-substring filenamePathPos (point)))
;;   ;; (other-window 1)
;;   ;; (find-file filePath)

;;   ;; (beginning-of-buffer)
;;   ;; (next-line)
;;   ;; (newline)
;;   ;; (insert (concat "import " missingTypePackage))
;;   ;; (other-window -1)
;;     )

#+END_SRC
