* Text Manipulation

Functions for manipulate text

#+BEGIN_SRC emacs-lisp :tangle yes
  (defun copy-line-from-point-as-string (&optional prefix suffix)
    (unless prefix (setq prefix ""))
    (unless suffix (setq suffix ""))
    (setq currentPoint (point))
    (end-of-line)
    (setq result (concat prefix (buffer-substring-no-properties currentPoint (point)) suffix))
    (eval result)
    )

  (defun kill-isearch-match ()
    "Kill the current isearch match string and continue searching."
    (interactive)
    (kill-region isearch-other-end (point)))

  (defun random-alnum (&optional arg)
    "Generate a random character"
    (interactive "p")
    (insert
     (mapconcat (lambda (x)
                  (let* ((alnum "abcdefghijklmnopqrstuvwxyz0123456789")
                         (i (% (abs (random)) (length alnum))))
                    (substring alnum i (1+ i))))
                 (number-sequence 1 arg 1)
                 "")
    ))

  (defun insert-random-uuid ()
    (interactive)
    (insert
      (replace-regexp-in-string "\n\\'" ""
        (shell-command-to-string "uuidgen")))
  )

  (defun duplicate-line-at (num)
    (interactive "nLine Number: ")
    (setq line-number (line-number-at-pos))
    (goto-line num)
    (kill-ring-save (line-beginning-position)
                    (line-end-position))
    (goto-line line-number)
    (move-beginning-of-line 1)
    (kill-line)
    (pop kill-ring)
    (insert (car kill-ring))
    )

  (global-set-key (kbd "C-c i u u") 'insert-random-uuid)
  (define-key isearch-mode-map [(control k)] 'kill-isearch-match)

  (defun move-line-up ()
    "Move current line up using `transpose-lines'"
    (interactive)
    (transpose-lines 1)
    (previous-line 2)
    )

  (defun move-line-down ()
    "Move current line down using `transpose-lines'"
    (interactive)
    (next-line)
    (transpose-lines 1)
    (previous-line)
    )

  (global-set-key [(control shift up)] 'move-line-up)
  (global-set-key [(control shift down)] 'move-line-down)
  (global-set-key [(control shift right)] (lambda () (interactive) (transpose-words 1)))
  (global-set-key [(control shift left)] (lambda () (interactive) (transpose-words -1)))
#+END_SRC
